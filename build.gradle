plugins {
	id "com.jfrog.artifactory" version "4.13.0"
	id 'groovy' // groovy support
	id 'java' // java support
	id 'scala' // scala support
	id 'pmd' // code check, working on source code
	id 'com.diffplug.gradle.spotless' version '3.29.0'// code format
	id 'com.github.spotbugs' version '4.2.0' // code check, working on byte code
	id "de.undercouch.download" version "3.4.3" // downloads plugin
	id 'jacoco' // java code coverage plugin
	id "org.sonarqube" version "2.8" // sonarqube
}

ext {
	//version (changing these should be considered thoroughly!)
	javaVersion = JavaVersion.VERSION_1_8

	unitsOfMeasurementVersion = '1.0.10'
	scalaVersion = '2.13'
	scalaBinaryVersion = '2.13.1'
	tscfgVersion = '0.9.96'
	slf4jVersion = '1.7.26'

	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

group = 'com.github.ie3-institute'
description = 'simbench4ie3'
version = '1.0-SNAPSHOT'

apply from: scriptsLocation + 'tests.gradle'
apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotbugs.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'sonarqube.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'tscfg.gradle' // config tasks
apply from: scriptsLocation + 'jacoco.gradle' // jacoco java code coverage

configurations {
	scalaCompilerPlugin
}

repositories {
	jcenter() //searches in bintray's repository 'jCenter', which contains Maven Central
	maven { url 'https://www.jitpack.io' } // allows github repos as dependencies

	// sonatype snapshots repo // todo remove
	maven { url 'https://oss.sonatype.org/service/local/repositories/snapshots/content' }
}

dependencies {
	/* PowerSystemDataModel */
	compile ('com.github.ie3-institute:PowerSystemDataModel:1.1-SNAPSHOT') {
		/* Exclude nested logging and ie3 related dependencies */
		exclude group: 'org.slf4j', module: 'slf4j-api'
		exclude group: 'com.github.ie3-institute'
	}

	/* util functions */
	compile ('com.github.ie3-institute:PowerSystemUtils:1.3.1') {
		/* Exclude nested logging and ie3 related dependencies */
		exclude group: 'org.slf4j', module: 'slf4j-api'
		exclude group: 'com.github.ie3-institute'
	}

	compile 'org.codehaus.groovy:groovy:3.0.3'

	compile "tec.uom:uom-se:$unitsOfMeasurementVersion"

	// logging
	compile 'org.apache.logging.log4j:log4j-api:+' // log4j
	compile 'org.apache.logging.log4j:log4j-core:+' // log4j
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:+' // log4j -> slf4j

	compile "com.typesafe.scala-logging:scala-logging_${scalaVersion}:+" // akka scala logging
	compile "org.slf4j:log4j-over-slf4j:${slf4jVersion}" // slf4j -> log4j

	// NEW scala libs //
	// CORE Scala //
	compile "org.scala-lang:scala-library:${scalaVersion}+"

	// TEST Scala //
	testCompile "org.scalatest:scalatest_${scalaVersion}:3.0.8"
	testRuntime "org.pegdown:pegdown:1.6.0" // HTML report for scalatest
	compile 'org.mockito:mockito-core:+' // mocking framework

	// config //
	implementation 'com.typesafe:config:+'
	compile "com.github.carueda:tscfg_2.13:${tscfgVersion}"

	// cmd args parser //
	compile "com.github.scopt:scopt_${scalaVersion}:+"

	/* Handling compressed archives */
	compile "org.apache.commons:commons-compress:+"

	/* Scala code quality */
	compile "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:1.4.4" // scala scapegoat
	scalaCompilerPlugin "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:1.4.4" // scala scapegoat
}

// scapegoat hook configuration
// https://github.com/sksamuel/scapegoat
// using compileScala instead of tasks.withType(ScalaCompile) prevents applying scapegoat to scala test classes
// see https://docs.gradle.org/current/userguide/scala_plugin.html#sec:configure_scala_classpath for details
compileScala {
	scalaCompileOptions.additionalParameters = [
		"-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
		"-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/src/",
		"-P:scapegoat:disabledInspections:VariableShadowing",
		"-P:scapegoat:ignoredFiles:.*SimbenchConfig\\.scala" // Regex matching all files to ignore
	]
}

// separate scapegoat report for test classes
compileTestScala {
	scalaCompileOptions.additionalParameters = [
		"-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
		"-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/testsrc/",
		"-P:scapegoat:disabledInspections:VariableShadowing"
	]
}

wrapper {
	gradleVersion = '6.4.1'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
