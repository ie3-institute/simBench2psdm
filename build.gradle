plugins{
	id "com.jfrog.artifactory" version "4.9.7"
	id 'groovy' // groovy support
	id 'java' // java support
	id 'scala' // scala support
	id 'maven-publish' // publish to a maven repo (local or mvn central, has to be defined)
	id 'pmd' // code check, working on source code
	id 'com.github.spotbugs' version '2.0.0' // code check, working on byte code
	id 'com.diffplug.gradle.spotless' version '3.24.2'// code format
	id "de.undercouch.download" version "3.4.3" // downloads plugin
	id 'jacoco' // java code coverage plugin
	id "org.sonarqube" version "2.7.1" // sonarqube
}

ext {
//version (changing these should be considered thoroughly!)
	unitsOfMeasurementVersion = '1.0.8'
	javaVersion = JavaVersion.VERSION_11

	scalaVersion = '2.13'
	tscfgVersion = '0.9.9'
	slf4jVersion = '1.7.26'

	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotbugs.gradle'
apply from: scriptsLocation + 'sonarqube.gradle' // sonarqube config
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'tests.gradle' // tasks for tests
apply from: scriptsLocation + 'checkJavaVersion.gradle'
apply from: scriptsLocation + 'tscfg.gradle' // config tasks
apply from: scriptsLocation + 'jacoco.gradle' // jacoco java code coverage

repositories {
	jcenter() //searches in bintray's repository 'jCenter', which contains Maven Central
	maven { url 'https://www.jitpack.io' } // allows github repos as dependencies
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	compile 'com.github.ie3-institute:PowerSystemUtils:+' // util functions

	// logging
	compile "org.slf4j:slf4j-api:${slf4jVersion}"  // slf4j wrapper
	compile 'com.lmax:disruptor:3.4.2' // async logging
	compile 'org.apache.logging.log4j:log4j-api:+' // log4j
	compile 'org.apache.logging.log4j:log4j-core:+' // log4j
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:+' // log4j -> slf4j

	compile "com.typesafe.scala-logging:scala-logging_${scalaVersion}:+" // akka scala logging
	compile "org.slf4j:log4j-over-slf4j:${slf4jVersion}" // slf4j -> log4j

	// testing
	testCompile 'org.spockframework:spock-core:1.3-groovy-+'

	compile 'javax.measure:unit-api:+'
	compile "tec.uom:uom-se:$unitsOfMeasurementVersion" // quantities

	// NEW scala libs //
	// CORE Scala //
	compile "org.scala-lang:scala-library:${scalaVersion}"

	// TEST Scala //
	testCompile "org.scalatest:scalatest_${scalaVersion}:3.0.8"
	testRuntime "org.pegdown:pegdown:1.6.0" // HTML report for scalatest

	// config //
	implementation 'com.typesafe:config:+'
	compile "com.github.carueda:tscfg:v${tscfgVersion}"

	// cmd args parser //
	compile "com.github.scopt:scopt_${scalaVersion}:+"

	/* Handling compressed archives */
	compile "org.apache.commons:commons-compress:+"
}

wrapper {
	gradleVersion = '6.0.1'
}

group = 'edu.ie3'
version = '0.1-SNAPSHOT'
description = 'simbench4ie3'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

task sourcesJar(type: Jar) {
	getArchiveClassifier().set('sources')
	from(sourceSets.main.allSource)
}

task javadocJar(type: Jar) {
	getArchiveClassifier().set('javadoc')
	from(javadoc.destinationDir)
}

if (project.hasProperty('user') && project.hasProperty('password')) {
	artifactory {
		contextUrl = "https://simona.ie3.e-technik.tu-dortmund.de/artifactory"
		publish {
			repository {
				repoKey = 'libs-snapshot-local'
				username = project.getProperty('user')
				password = project.getProperty('password')
				maven = true
			}
			defaults {
				publications('mavenJava')
			}
		}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = 'simbench4ie3'
			from components.java
			artifact sourcesJar
			artifact javadocJar
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
	repositories {
		maven {
			def releasesRepoUrl = "$buildDir/repos/releases"
			def snapshotsRepoUrl = "$buildDir/repos/snapshots"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}
